# Dockerfile.client



# Build step #1: build the React front end

FROM node:20-alpine as build-step

WORKDIR /app

ENV PATH /app/node_modules/.bin:$PATH

COPY front-end/*.json ./
COPY front-end/*.js ./
COPY front-end/*.ts ./
COPY front-end/src ./src
COPY front-end/public ./public
COPY front-end/deployment ./deployment


# ARG NEXT_PUBLIC_API_ENDPOINT
ENV NEXT_PUBLIC_API_ENDPOINT="127.0.0.1:8000"


# install packages
RUN npm install
RUN npm run build


# Production image, copy all the files and run next
FROM node:alpine AS runner
WORKDIR /app

ENV NODE_ENV production

RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001

COPY --from=build-step /app/next.config.js ./
COPY --from=build-step /app/public ./public
COPY --from=build-step --chown=nextjs:nodejs /app/.next ./.next
COPY --from=build-step /app/node_modules ./node_modules
COPY --from=build-step /app/package.json ./package.json

USER nextjs

EXPOSE 3000

ENV PORT 3000

# Next.js collects completely anonymous telemetry data about general usage.
# Learn more here: https://nextjs.org/telemetry
# Uncomment the following line in case you want to disable telemetry.
# ENV NEXT_TELEMETRY_DISABLED 1

CMD ["node_modules/.bin/next", "start"]


# # Build step #2: build an nginx container
# FROM nginx:stable-alpine
# COPY --from=build-step /app/.next /usr/share/nginx/html

# # TODO: need to add deployment/nginx.default.conf
# COPY --from=build-step /app/deployment/nginx.default.conf /etc/nginx/conf.d/default.conf

# EXPOSE 3000
# CMD ["nginx", "-g", "daemon off;"]
