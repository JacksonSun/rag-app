"""init_db

Revision ID: 35410c2056a2
Revises:
Create Date: 2023-09-14 18:09:05.760259

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "35410c2056a2"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "file_meta",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("filename", sa.String(), nullable=True),
        sa.Column("blob_name", sa.String(), nullable=True),
        sa.Column("uuid", sa.String(), nullable=True),
        sa.Column("url", sa.String(), nullable=True),
        sa.Column("summary", sa.JSON(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("create_time", sa.DateTime(), nullable=True),
        sa.Column("last_modified", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_file_meta_blob_name"), "file_meta", ["blob_name"], unique=True
    )
    op.create_index(
        op.f("ix_file_meta_filename"), "file_meta", ["filename"], unique=True
    )
    op.create_index(op.f("ix_file_meta_id"), "file_meta", ["id"], unique=False)
    op.create_index(op.f("ix_file_meta_url"), "file_meta", ["url"], unique=True)
    op.create_index(op.f("ix_file_meta_uuid"), "file_meta", ["uuid"], unique=True)
    op.create_table(
        "qa_history",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("question", sa.String(), nullable=True),
        sa.Column("answer", sa.String(), nullable=True),
        sa.Column("source", sa.ARRAY(sa.Integer()), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("create_time", sa.DateTime(), nullable=True),
        sa.Column("last_modified", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_qa_history_answer"), "qa_history", ["answer"], unique=False
    )
    op.create_index(op.f("ix_qa_history_id"), "qa_history", ["id"], unique=False)
    op.create_index(
        op.f("ix_qa_history_question"), "qa_history", ["question"], unique=False
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("token_id", sa.String(), nullable=True),
        sa.Column("bg", sa.String(), nullable=True),
        sa.Column("bu", sa.String(), nullable=True),
        sa.Column("job_grade", sa.String(), nullable=True),
        sa.Column("create_time", sa.DateTime(), nullable=True),
        sa.Column("last_modified", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_index(op.f("ix_user_id"), "user", ["id"], unique=False)
    op.create_index(op.f("ix_user_token_id"), "user", ["token_id"], unique=True)
    op.create_index(op.f("ix_user_username"), "user", ["username"], unique=True)
    op.create_table(
        "feedback",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("query", sa.String(), nullable=False),
        sa.Column("irrelevant_source", sa.String(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("create_time", sa.DateTime(), nullable=True),
        sa.Column("last_modified", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["irrelevant_source"],
            ["file_meta.uuid"],
            name="feedback_filemeta_uuid_fk",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name="feedback_user_id_fk", ondelete="NO ACTION"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_feedback_id"), "feedback", ["id"], unique=False)
    op.create_index(
        op.f("ix_feedback_irrelevant_source"),
        "feedback",
        ["irrelevant_source"],
        unique=False,
    )
    op.create_index(op.f("ix_feedback_query"), "feedback", ["query"], unique=False)
    op.create_index(op.f("ix_feedback_user_id"), "feedback", ["user_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_feedback_user_id"), table_name="feedback")
    op.drop_index(op.f("ix_feedback_query"), table_name="feedback")
    op.drop_index(op.f("ix_feedback_irrelevant_source"), table_name="feedback")
    op.drop_index(op.f("ix_feedback_id"), table_name="feedback")
    op.drop_table("feedback")
    op.drop_index(op.f("ix_user_username"), table_name="user")
    op.drop_index(op.f("ix_user_token_id"), table_name="user")
    op.drop_index(op.f("ix_user_id"), table_name="user")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_qa_history_question"), table_name="qa_history")
    op.drop_index(op.f("ix_qa_history_id"), table_name="qa_history")
    op.drop_index(op.f("ix_qa_history_answer"), table_name="qa_history")
    op.drop_table("qa_history")
    op.drop_index(op.f("ix_file_meta_uuid"), table_name="file_meta")
    op.drop_index(op.f("ix_file_meta_url"), table_name="file_meta")
    op.drop_index(op.f("ix_file_meta_id"), table_name="file_meta")
    op.drop_index(op.f("ix_file_meta_filename"), table_name="file_meta")
    op.drop_index(op.f("ix_file_meta_blob_name"), table_name="file_meta")
    op.drop_table("file_meta")
    # ### end Alembic commands ###
